# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - src/Equinor.ProCoSys.Common/*
      - pipelines/azure-pipeline-common.yml

pr:
  branches:
    include:
    - main
  paths:
    include:
      - src/Equinor.ProCoSys.Common/*
      - pipelines/azure-pipeline-common.yml

variables:
  ##System.Debug: 'true'
  vmImageName: 'windows-latest'
  buildConfiguration: 'Release'

stages:
- stage: "Build"
  displayName: 'Build and run tests'
  jobs:
  - job:
    workspace:
      clean: all
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: restore
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: build
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: 'Run tests in $(buildConfiguration)'
      inputs:
        command: test
        projects: '**/Equinor.ProCoSys.Common.Tests/*.csproj'
        arguments: '--configuration $(buildConfiguration)'

- stage: "PublishAndPackCommon"
  displayName: 'Publish and Pack Common'
  dependsOn: 'Build'
  #condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  condition: succeeded()
  jobs:
  - job: PackAndPublish
    displayName: Pack Worker, then publish both
    pool:
      vmImage: $(vmImageName)
    steps:
    - checkout: self
    
    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: restore
        projects: '**/*.csproj' 
          
    - task: PowerShell@2
      name: getVersion # Name of the pipeline variable used as prefix in referenace. Example $(getVersion.packageVersion)
      displayName: 'Get version'
      inputs:
        targetType: inline
        pwsh: true
        script: |
          # Set powershell variables
          $path = "src/Equinor.ProCoSys.Common/Equinor.ProCoSys.Common.csproj"
          $xPath = "/Project/PropertyGroup"
          $element = "VersionPrefix"
          $variableName = "packageVersion" # Name of the pipeline variable used as suffix in referenace. Example $(getVersion.packageVersion)

          # Get version from XML file
          # Check if file contains data
          $i = Get-Content $path
          if (!$i) {Write-Host "invalid filepath or file is empty"}
          else {Write-Host "File validated OK"}

          $xmlData = [xml](Get-Content $path) # Get content from xml file

          $version = ($xmlData.ChildNodes.SelectNodes("$xPath") | Select-Object $element).$element
          if (!$version) {Write-Host "Could not read xml value"} # Validates if value can be read from xml

          # Set variable
          "##vso[task.setvariable variable=$variableName;isOutput=true]$($version)"
          Write-Host "Setting variable named $variableName with value $($version)" # Use as prefix in variale referenace

    - task: DotNetCoreCLI@2
      displayName: 'NuGet pack'
      inputs:
        command: pack
        packagesToPack: 'src/Equinor.ProCoSys.Common/Equinor.ProCoSys.Common.csproj' 
        packDestination: '$(Build.ArtifactStagingDirectory)\packages\releases'
        version: $(getVersion.packageVersion)

    - publish: '$(Build.ArtifactStagingDirectory)'
      artifact: 'packages'

    - task: NuGetAuthenticate@0
      displayName: 'NuGet authenticate'

    - task: DotNetCoreCLI@2
      displayName: 'NuGet push release'
      inputs:
        command: push
        feedsToUse: 'select'
        packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
        publishVstsFeed: 'ProCoSysOfficial'
